@inject GameControler GameControler
@inject IJSRuntime JS
@inject EventAgregator<Player> EventAgregator
<div>
<h3>Submit trade to SpotMarket</h3>
<label>
	Expected price per unit
<InputNumber  @bind-Value="ExpectedPrice" />
</label>
<label>
	Amount of resources in trade
<InputNumber  @bind-Value="AmountOfferedToSale" />
</label>
<InputRadioGroup @bind-Value="TradeType">
	<InputRadio Value="SpotMarketOfferType.Buy" />Buy
	<InputRadio Value="SpotMarketOfferType.Sell" />Sell
</InputRadioGroup>

<button @onclick="TryCreateNewTradeOffer">Create</button>
</div>
@code {

	[CascadingParameter]
	public Player? Player { get; set; }
	public double ExpectedPrice = 0;
	public double AmountOfferedToSale = 0;
	public SpotMarketOfferType TradeType = SpotMarketOfferType.Sell;

	override protected void OnInitialized()
	{
		
	}
	void TryCreateNewTradeOffer()
	{

		if(!GameControler.Game.SpotMarket.TryCreateNewTradeOffer(new R<Oil>(AmountOfferedToSale), new R<Money>(ExpectedPrice), Player.Trader, TradeType))
		{
			JS.InvokeVoidAsync("alert", "Creating new trade offer failed");
		};

	}
}
