@inject GameControler GameControler
@inject EventAgregator<SpotMarket> EventAgregator
@implements IDisposable
<h3>Spot Market</h3>

Buy offers


<ul class="list-group">
	@foreach (var item in GameControler.Game.SpotMarket.GetSpotMarket<Oil>().BuyOffers)
{
	<li class="list-group-item">
	<SpotMarketTradeComponent SpotMarketOffer=item></SpotMarketTradeComponent>
	</li>
}
</ul>
Sell offers

<ul class="list-group">
@foreach (var item in GameControler.Game.SpotMarket.GetSpotMarket<Oil>().SellOffers)
{
		<li class="list-group-item">
		<SpotMarketTradeComponent SpotMarketOffer=item></SpotMarketTradeComponent>
	</li>
}
</ul>
@code {
	protected override void OnInitialized()
	{
		EventAgregator.Subscribe(this, (SpotMarket spotMarket) => InvokeAsync(() =>  StateHasChanged() ));
	}
public void Dispose()
	{
		EventAgregator.Unsubscribe(this);
	}

}
