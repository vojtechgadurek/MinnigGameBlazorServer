@inject IUserMaintainer UserMaintainer
@inject GameControler GameControler
@inject EventAgregator<Player?> eventAgregator
@inject NavigationManager NavigationManager
@page "/"

<PageTitle>Index</PageTitle>
@if (Player != null)
{
	<div> Welcome, @Player.Name</div>
	<div> You have @Player.Trader.Money $</div>
	<div> You have @Player.Trader.Oil units of oil</div>
	<div> You owe @GameControler.Game.Bank.GetCashLend(Player).Amount at @GameControler.Game.Bank.InterestPerRound % ínterest per round</div>
	<div> Turn @currentCount</div>
	@if (Player.Admin == true)
	{
		<button @onclick="NewRound"> Force new round</button>
	}
	<label>
	<InputNumber  @bind-Value="BorrowMore" />
	</label>
	<button @onclick="Borrow"> Borrow @BorrowMore $</button>
}


@code{

	public double BorrowMore = 0;
	void Borrow()
	{
		GameControler.Game.Bank.TakeLoan(Player, Resource.CreateMoney(BorrowMore));
	}
	void NewRound()
	{
		GameControler.ForceNewRound(Player);
		currentCount = GameControler.GetRoundNumber();
	}
	
	[CascadingParameter]
	public Player? Player { get; set; }

	public int currentCount = 0;

	protected override void OnInitialized()
	{
		if (Player is null) NavigationManager.NavigateTo("singin");
	}
}